global
  daemon
  maxconn 300000

  nbproc 3

  # Map process 1 to CPU 0, process 2 to CPU 1, and so on.
  cpu-map 1 0
  cpu-map 2 1
  cpu-map 3 2

  stats socket /var/run/haproxy.sock process 1
  stats socket /var/run/haproxy-kompressor.sock process 2
  stats socket /var/run/haproxy-ssl.sock process 3
  stats timeout 5m

  tune.ssl.default-dh-param 2048

defaults
  mode http

  maxconn 300000

  option abortonclose
  option http-keep-alive

  timeout client 30s
  timeout server 30s
  timeout connect 5s
  timeout http-keep-alive 30s

  http-reuse aggressive

  bind-process 1


listen ssl-offload

  bind :8443 ssl crt /usr/local/etc/haproxy/certs/server.pem no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256

  # Only send traffic through the compressor if the request asks for it.
  use-server kompressor0 if { req.hdr(Accept-Encoding) -i gzip }

  # Only use this server if the above ACL is set, otherwise skip (weight zero).
  server kompressor0 /var/run/haproxy-kompressor0.sock send-proxy-v2 weight 0

  # Send all other requests straight to the app servers.
  server foo0 /var/run/haproxy-foo0.sock send-proxy-v2

  http-response set-header Strict-Transport-Security max-age=15768000

  bind-process 3


listen kompressor
  compression algo gzip

  bind :8000
  bind /var/run/haproxy-kompressor0.sock accept-proxy

  server foo0 /var/run/haproxy-foo0.sock send-proxy-v2

  bind-process 2

listen foo
  bind /var/run/haproxy-foo0.sock accept-proxy

  server srv1 ${SERVER} check
  bind-process 1

listen stats
  stats enable
  stats refresh 2s
  stats show-desc "Application ${APP_NAME}"
  stats uri /
  bind :8181
  bind-process 1

listen stats-kompy
  stats enable
  stats refresh 2s
  stats show-desc KOMPRESSOR
  stats uri /
  bind :8182
  bind-process 2

listen stats-ssl
  stats enable
  stats refresh 2s
  stats show-desc SSL
  stats uri /
  bind :8183
  bind-process 3

